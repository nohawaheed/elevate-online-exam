var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.196,1,0.385]],["body/components/AppComponent.html",[0,0.32,1,0.666,2,0.671,3,0.513,4,0.43,5,0.602,6,0.602,7,0.602,8,0.43,9,2.471,10,0.602,11,1.073,12,1.073,13,3.234,14,0.788,15,0.788,16,0.788,17,3.606,18,0.788,19,4.011,20,0.788,21,4.011,22,0.602,23,0.915,24,4.472,25,0.602,26,0.051,27,1.555,28,0.699,29,0.699,30,4.011,31,4.011,32,0.805,33,3.064,34,0.671,35,0.43,36,1.05,37,0.513,38,0.513,39,0.602,40,0.788,41,0.788,42,0.602,43,0.933,44,0.602,45,0.563,46,0.602,47,0.43,48,0.602,49,0.602,50,0.43,51,0.602,52,0.43,53,0.602,54,0.602,55,0.43,56,0.602,57,0.788,58,0.43,59,0.602,60,0.43,61,0.602,62,0.43,63,0.602,64,0.43,65,0.602,66,0.43,67,0.602,68,0.602,69,0.43,70,0.602,71,0.43,72,0.602,73,0.513,74,0.602,75,0.602,76,0.037,77,0.037]],["title/components/AuthLayoutComponent.html",[0,0.196,47,0.385]],["body/components/AuthLayoutComponent.html",[0,0.312,1,0.41,2,0.65,3,0.489,4,0.41,5,0.574,6,0.574,7,0.574,8,0.41,10,0.574,11,1.066,12,1.066,14,0.764,15,0.764,16,0.764,17,3.521,18,0.764,20,0.764,26,0.051,34,0.779,35,0.41,36,1,37,0.489,38,0.489,39,0.574,40,0.764,41,0.764,42,0.574,43,0.915,44,0.574,45,0.545,46,0.574,47,0.653,48,1,49,0.574,50,0.41,51,0.574,52,0.41,53,0.574,54,0.574,55,0.41,56,0.574,57,0.764,58,0.41,59,0.574,60,0.41,61,0.574,62,0.653,63,0.574,64,0.41,65,0.574,66,0.41,67,0.574,68,0.574,69,0.41,70,0.574,71,0.41,72,0.574,73,0.489,74,0.574,75,0.574,76,0.035,77,0.035,78,2.354,79,2.354,80,2.354,81,3.885,82,4.366,83,3.885,84,3.885,85,2.919,86,1.704,87,3.885,88,3.885,89,3.885,90,3.885,91,3.885,92,3.885,93,3.885,94,3.885,95,3.885,96,3.885]],["title/injectables/AuthService.html",[97,1.6,98,0.939]],["body/injectables/AuthService.html",[3,0.414,4,0.347,8,0.347,13,1.993,22,0.486,23,0.791,25,0.853,26,0.052,27,2.522,28,0.791,29,0.791,32,1.326,34,0.727,35,0.347,37,0.414,38,0.414,45,0.562,76,0.032,77,0.032,86,1.442,97,2.024,98,1.188,99,2.471,100,1.993,101,1.929,102,2.534,103,4.341,104,1.042,105,4.341,106,4.341,107,4.341,108,4.341,109,3.467,110,3.467,111,1.353,112,2.471,113,4.005,114,2.471,115,1.372,116,1.372,117,3.467,118,2.471,119,1.624,120,4.005,121,2.471,122,3.687,123,2.471,124,1.624,125,2.471,126,3.23,127,3.467,128,1.562,129,4.572,130,2.471,131,1.993,132,3.467,133,2.471,134,4.572,135,1.188,136,2.471,137,2.471,138,2.471,139,2.471,140,2.796,141,2.796,142,0.964,143,0.964,144,2.471,145,2.471,146,2.471,147,2.767,148,2.471,149,2.471,150,4.005,151,2.471,152,2.471,153,2.471,154,2.471,155,2.471,156,2.471,157,2.471,158,2.471,159,2.471,160,2.471,161,4.005,162,1.098,163,2.471,164,1.541,165,2.471,166,2.796,167,2.471,168,2.471,169,1.993,170,2.471,171,2.471]],["title/components/ButtonComponent.html",[0,0.196,50,0.385]],["body/components/ButtonComponent.html",[0,0.271,1,0.315,2,0.542,3,0.376,4,0.315,5,0.441,6,0.441,7,0.441,8,0.315,10,0.441,11,1.025,12,1.025,14,0.636,15,0.746,16,0.636,18,0.636,20,0.636,22,0.441,23,0.738,25,1.017,26,0.052,27,2.603,28,1.08,29,1.08,32,1.347,34,0.636,35,0.315,37,0.376,38,0.376,39,0.441,40,0.636,41,0.636,42,0.441,43,0.817,44,0.441,45,0.533,46,0.441,47,0.315,48,0.441,49,0.441,50,0.583,51,0.441,52,0.315,53,0.441,54,0.441,55,0.315,56,0.441,57,0.636,58,0.315,59,0.441,60,0.315,61,0.441,62,0.315,63,0.441,64,0.315,65,0.441,66,0.315,67,0.441,68,0.441,69,0.315,70,0.441,71,0.315,72,0.441,73,0.376,74,0.441,75,0.441,76,0.03,77,0.03,86,1.309,104,0.973,115,0.769,116,0.769,119,0.769,124,1.109,128,1.263,172,1.809,173,4.156,174,3.796,175,3.796,176,3.236,177,3.236,178,4.406,179,4.406,180,3.236,181,2.61,182,3.796,183,3.796,184,3.061,185,1.927,186,3.796,187,3.796,188,3.236,189,3.236,190,2.243,191,3.236,192,2.243,193,2.61,194,2.243,195,1.438,196,2.243,197,3.236,198,3.236,199,2.243,200,2.243,201,3.236,202,2.243,203,4.156,204,2.243,205,3.236,206,3.236,207,3.236,208,3.796,209,2.243,210,2.243,211,3.98,212,3.236,213,2.243,214,2.243,215,2.243]],["title/components/ErrorMessageComponent.html",[0,0.196,52,0.385]],["body/components/ErrorMessageComponent.html",[0,0.312,1,0.409,2,0.65,3,0.488,4,0.409,5,0.573,6,0.573,7,0.573,8,0.409,10,0.573,11,1.066,12,1.066,14,0.763,15,0.763,16,0.763,18,0.763,20,0.763,22,0.573,25,0.573,26,0.051,27,1.97,28,0.665,29,0.665,32,0.765,34,0.73,35,0.409,37,0.488,38,0.488,39,0.573,40,0.763,41,0.763,42,0.573,43,0.914,44,0.573,45,0.544,46,0.573,47,0.409,48,0.573,49,0.573,50,0.409,51,0.573,52,0.653,53,1,54,0.573,55,0.409,56,0.573,57,0.763,58,0.409,59,0.573,60,0.409,61,0.573,62,0.409,63,0.573,64,0.409,65,0.573,66,0.409,67,0.573,68,0.573,69,0.409,70,0.573,71,0.409,72,0.573,73,0.488,74,0.573,75,0.573,76,0.035,77,0.035,122,3.751,169,4.1,181,3.129,211,3.129,216,3.129,217,1.514,218,2.349,219,3.88,220,1.514,221,3.88,222,3.88,223,2.913,224,2.913,225,1.137,226,2.913]],["title/components/ForgotPasswordComponent.html",[0,0.196,55,0.385]],["body/components/ForgotPasswordComponent.html",[0,0.245,1,0.265,2,0.477,3,0.316,4,0.265,5,0.371,6,0.371,7,0.371,8,0.265,10,0.371,11,0.994,12,0.994,14,0.56,15,0.674,16,0.56,18,0.56,20,0.56,22,0.371,23,0.65,25,0.751,26,0.052,28,0.783,29,0.783,32,1.176,34,0.829,35,0.265,36,0.647,37,0.316,38,0.316,39,0.371,40,0.56,41,0.56,42,0.371,43,0.751,44,0.371,45,0.481,46,0.371,47,0.265,48,0.56,49,0.371,50,0.536,51,0.371,52,0.536,53,0.674,54,0.371,55,0.536,56,0.927,57,0.56,58,0.265,59,0.371,60,0.265,61,0.371,62,0.265,63,0.371,64,0.265,65,0.371,66,0.536,67,0.371,68,0.371,69,0.265,70,0.371,71,0.265,72,0.371,73,0.477,74,0.371,75,0.371,76,0.026,77,0.026,98,1.406,101,1.524,102,1.101,104,0.856,111,0.736,115,0.647,116,0.647,119,1.176,124,1.406,128,1.111,135,1.478,142,0.736,143,0.736,162,1.916,164,1.916,185,1.741,195,1.698,217,0.736,220,1.338,225,0.736,227,3.717,228,3.717,229,1.281,230,1.111,231,1.524,232,1.741,233,1.741,234,2.002,235,2.329,236,2.296,237,2.296,238,1.741,239,3.43,240,1.94,241,1.698,242,1.94,243,1.281,244,1.94,245,2.273,246,1.747,247,1.521,248,1.446,249,1.886,250,1.886,251,1.886,252,2.082,253,1.521,254,1.521,255,1.886,256,0.958,257,0.958,258,0.958,259,0.958,260,1.101,261,0.958,262,0.958,263,0.736,264,0.958,265,1.101,266,1.662,267,2.296,268,0.958,269,0.958,270,0.838,271,0.958,272,0.838,273,1.886,274,1.886,275,1.101,276,1.281,277,1.101,278,2.002,279,1.886,280,1.886,281,1.101,282,1.521,283,1.524,284,1.446,285,1.265,286,1.446,287,1.521,288,0.958,289,1.886,290,0.958,291,1.101,292,0.958,293,0.958,294,0.958,295,1.886,296,1.886,297,1.886,298,1.886,299,1.886,300,1.886,301,2.296,302,1.886,303,1.886,304,1.886,305,1.886,306,1.886,307,1.886]],["title/components/HomeComponent.html",[0,0.196,58,0.385]],["body/components/HomeComponent.html",[0,0.327,1,0.451,2,0.693,3,0.538,4,0.451,5,0.632,6,0.632,7,0.632,8,0.451,10,0.632,11,1.079,12,1.079,14,0.814,15,0.814,16,0.632,18,0.814,20,0.814,26,0.05,34,0.538,35,0.451,37,0.538,38,0.538,39,0.632,40,0.814,41,0.814,42,0.632,43,0.95,44,0.632,45,0.581,46,0.632,47,0.451,48,0.632,49,0.632,50,0.451,51,0.632,52,0.451,53,0.632,54,0.632,55,0.451,56,0.632,57,0.814,58,0.678,59,0.632,60,0.451,61,0.632,62,0.451,63,0.632,64,0.451,65,0.632,66,0.451,67,0.632,68,0.632,69,0.451,70,0.632,71,0.451,72,0.632,73,0.538,74,0.632,75,0.632,76,0.038,77,0.038,308,2.594,309,4.833,310,4.14,311,4.14,312,4.14]],["title/components/LoginComponent.html",[0,0.196,60,0.385]],["body/components/LoginComponent.html",[0,0.239,1,0.253,2,0.461,3,0.302,4,0.253,5,0.355,6,0.355,7,0.355,8,0.253,10,0.355,11,0.985,12,0.985,14,0.541,15,0.656,16,0.541,18,0.541,20,0.541,22,0.355,23,0.628,25,0.791,26,0.052,28,0.852,29,0.852,32,1.194,34,0.839,35,0.253,36,0.618,37,0.302,38,0.302,39,0.355,40,0.541,41,0.541,42,0.355,43,0.734,44,0.355,45,0.468,46,0.355,47,0.253,48,0.541,49,0.355,50,0.524,51,0.355,52,0.524,53,0.656,54,0.355,55,0.253,56,0.355,57,0.541,58,0.253,59,0.355,60,0.524,61,0.355,62,0.253,63,0.355,64,0.253,65,0.355,66,0.468,67,0.355,68,0.355,69,0.253,70,0.355,71,0.253,72,0.355,73,0.302,74,0.355,75,0.355,76,0.025,77,0.025,98,1.28,101,1.483,102,1.053,104,0.827,111,0.704,115,0.618,116,0.618,119,1.144,124,1.28,128,1.457,131,2.692,135,1.511,142,0.704,143,0.704,162,1.884,164,1.483,185,1.694,195,1.884,217,0.704,220,1.074,225,0.704,230,1.074,231,1.483,232,1.694,233,1.397,234,1.948,235,1.869,238,1.694,240,1.896,241,1.66,242,1.896,244,1.694,245,2.152,246,1.72,248,1.694,252,2.042,256,0.916,257,0.916,258,0.916,259,0.916,260,1.053,261,0.916,262,0.916,263,0.704,264,0.916,265,1.053,266,1.053,268,0.916,269,0.916,270,0.802,271,0.916,272,0.802,275,1.607,276,1.225,277,1.607,278,1.948,281,1.053,283,1.483,284,1.397,285,1.223,286,1.397,288,0.916,290,0.916,291,1.053,292,0.916,293,0.916,294,0.916,301,2.22,313,1.455,314,2.22,315,2.753,316,2.266,317,2.753,318,2.753,319,2.753,320,3.338,321,1.455,322,2.266,323,1.804,324,1.804,325,1.804,326,1.804,327,1.804,328,1.804,329,1.804,330,1.804,331,1.225,332,1.804,333,1.804,334,1.804,335,1.804,336,1.053,337,1.804,338,1.455,339,1.225,340,1.225,341,1.225,342,1.804,343,1.455,344,1.869,345,1.804,346,1.455,347,1.869,348,1.804,349,1.804,350,1.804,351,1.804,352,1.804,353,1.804,354,1.804,355,1.804,356,1.804,357,1.804,358,1.804,359,1.804,360,1.804,361,1.804,362,1.804,363,1.804,364,1.804,365,1.804,366,1.804,367,1.804,368,1.804,369,1.804,370,1.804,371,1.804]],["title/components/NavbarComponent.html",[0,0.196,62,0.385]],["body/components/NavbarComponent.html",[0,0.285,1,0.345,2,0.578,3,0.411,4,0.345,5,0.483,6,0.483,7,0.483,8,0.345,10,0.483,11,1.04,12,1.04,14,0.678,15,0.678,16,0.678,18,0.678,20,0.678,22,0.483,23,0.787,25,0.851,26,0.052,27,2.198,28,0.787,29,0.787,32,1.198,34,0.725,35,0.345,37,0.411,38,0.411,39,0.483,40,0.678,41,0.678,42,0.483,43,0.851,44,0.483,45,0.608,46,0.483,47,0.345,48,0.483,49,0.483,50,0.345,51,0.483,52,0.345,53,0.483,54,0.483,55,0.345,56,0.483,57,0.678,58,0.345,59,0.483,60,0.345,61,0.483,62,0.608,63,0.483,64,0.345,65,0.483,66,0.345,67,0.784,68,0.483,69,0.345,70,0.483,71,0.345,72,0.483,73,0.411,74,0.483,75,0.483,76,0.032,77,0.032,104,1.037,111,0.958,115,1.183,116,1.183,119,1.183,124,1.368,147,1.433,184,3.678,220,1.346,225,0.958,230,1.346,231,1.773,241,1.924,246,1.935,270,1.091,272,1.091,283,1.091,285,1.091,336,2.014,347,2.343,372,1.98,373,3.451,374,3.451,375,3.451,376,3.451,377,3.99,378,3.99,379,3.451,380,2.455,381,2.455,382,2.455,383,2.455,384,2.455,385,3.99,386,2.455,387,3.99,388,2.455,389,2.455,390,2.455,391,2.455,392,2.783,393,2.455,394,2.455,395,2.455,396,2.455,397,2.455,398,2.455,399,2.455,400,2.455,401,2.455]],["title/components/RegisterComponent.html",[0,0.196,64,0.385]],["body/components/RegisterComponent.html",[0,0.216,1,0.217,2,0.409,3,0.259,4,0.217,5,0.304,6,0.304,7,0.304,8,0.217,10,0.304,11,0.954,12,0.954,14,0.48,15,0.595,16,0.48,18,0.48,20,0.48,22,0.304,23,0.558,25,0.676,26,0.052,28,0.691,29,0.691,32,1.095,34,0.802,35,0.217,36,0.53,37,0.259,38,0.259,39,0.304,40,0.48,41,0.48,42,0.304,43,0.676,44,0.304,45,0.425,46,0.304,47,0.217,48,0.48,49,0.304,50,0.483,51,0.304,52,0.483,53,0.595,54,0.304,55,0.217,56,0.304,57,0.48,58,0.217,59,0.304,60,0.217,61,0.304,62,0.217,63,0.304,64,0.483,65,0.304,66,0.483,67,0.595,68,0.304,69,0.217,70,0.304,71,0.217,72,0.304,73,0.259,74,0.304,75,0.304,76,0.022,77,0.022,98,1.179,101,1.346,102,0.903,104,0.735,111,0.604,115,0.53,116,0.53,119,1.038,124,1.179,126,1.248,128,0.954,135,1.619,140,1.248,141,1.248,142,0.604,143,0.604,147,0.903,162,1.769,164,0.688,166,1.248,185,1.538,195,1.529,217,0.604,220,1.182,225,0.604,230,0.954,231,1.086,232,1.241,233,1.538,234,1.768,235,2.056,238,1.538,240,1.746,241,1.529,242,1.746,244,1.746,245,2.021,246,1.626,248,1.538,252,1.901,256,0.786,257,0.786,258,0.786,259,0.786,260,0.903,261,0.786,262,0.786,263,0.604,264,0.786,265,0.903,266,1.427,268,0.786,269,0.786,270,0.688,271,0.786,272,0.688,275,2.433,276,1.051,277,2.008,278,1.768,281,0.903,283,1.346,284,1.241,285,1.086,286,1.241,288,0.786,290,0.786,291,0.903,292,0.786,293,0.786,294,0.786,314,1.971,316,2.056,321,1.248,322,2.056,331,1.051,336,0.903,338,1.248,339,1.051,340,1.051,341,1.051,343,1.971,344,1.659,347,1.659,402,1.248,403,2.444,404,2.444,405,3.029,406,1.548,407,1.548,408,1.548,409,1.548,410,1.548,411,1.548,412,1.548,413,1.548,414,1.548,415,1.548,416,1.548,417,1.548,418,2.444,419,1.548,420,1.248,421,1.548,422,1.548,423,1.548,424,1.548,425,1.548,426,1.548,427,1.548,428,2.444,429,1.548,430,1.548,431,1.548,432,1.548,433,1.548,434,1.548,435,1.548,436,1.548,437,1.548,438,1.548,439,1.548,440,1.548,441,1.548,442,1.548,443,1.548,444,1.548,445,1.548,446,1.548,447,1.548,448,1.548,449,1.548,450,1.548,451,1.548,452,1.548,453,1.548,454,1.548,455,1.548,456,1.548,457,1.548,458,1.548,459,1.548,460,1.548,461,1.548,462,1.548,463,1.548,464,1.548,465,1.548,466,1.548,467,1.548,468,1.548,469,1.548,470,1.548,471,1.548,472,1.548,473,1.548,474,2.444,475,2.444,476,1.548,477,1.548,478,1.548,479,1.548,480,1.548,481,1.548,482,1.548,483,1.548,484,1.548,485,1.548,486,1.548,487,1.548,488,1.548,489,1.548,490,1.548,491,1.548,492,1.548,493,1.548,494,1.548,495,1.548,496,1.548,497,1.548,498,1.548,499,1.548,500,1.548,501,1.548,502,1.548,503,1.548,504,1.548,505,1.548,506,1.548,507,1.548,508,1.548,509,1.548,510,1.548,511,1.548,512,1.548,513,1.548,514,1.548,515,1.548,516,1.548,517,1.548,518,1.548,519,1.548,520,1.548]],["title/components/RegisterMethodsComponent.html",[0,0.196,66,0.385]],["body/components/RegisterMethodsComponent.html",[0,0.324,1,0.444,2,0.685,3,0.529,4,0.444,5,0.622,6,0.622,7,0.622,8,0.444,10,0.622,11,1.077,12,1.077,14,0.805,15,0.805,16,0.622,18,0.805,20,0.805,26,0.05,34,0.529,35,0.444,37,0.529,38,0.529,39,0.622,40,0.805,41,0.805,42,0.622,43,0.944,44,0.622,45,0.575,46,0.622,47,0.444,48,0.622,49,0.622,50,0.444,51,0.622,52,0.444,53,0.622,54,0.622,55,0.444,56,0.622,57,0.805,58,0.444,59,0.622,60,0.444,61,0.622,62,0.444,63,0.622,64,0.444,65,0.622,66,0.674,67,1.02,68,0.622,69,0.444,70,0.622,71,0.444,72,0.622,73,0.529,74,0.622,75,0.622,76,0.037,77,0.037,104,1.23,263,1.233,521,2.55,522,2.55,523,4.094,524,4.094,525,4.094]],["title/components/ResetPasswordComponent.html",[0,0.196,69,0.385]],["body/components/ResetPasswordComponent.html",[0,0.241,1,0.258,2,0.467,3,0.307,4,0.258,5,0.361,6,0.361,7,0.361,8,0.258,10,0.361,11,0.989,12,0.989,14,0.548,15,0.663,16,0.548,18,0.548,20,0.548,22,0.361,23,0.636,25,0.741,26,0.052,28,0.77,29,0.77,32,1.165,34,0.824,35,0.258,36,0.629,37,0.307,38,0.307,39,0.361,40,0.548,41,0.548,42,0.361,43,0.741,44,0.361,45,0.473,46,0.361,47,0.258,48,0.548,49,0.361,50,0.473,51,0.361,52,0.529,53,0.741,54,0.361,55,0.258,56,0.361,57,0.548,58,0.258,59,0.361,60,0.258,61,0.361,62,0.258,63,0.361,64,0.258,65,0.361,66,0.529,67,0.361,68,0.361,69,0.529,70,0.797,71,0.258,72,0.361,73,0.307,74,0.361,75,0.361,76,0.025,77,0.025,98,1.291,101,1.499,104,0.838,111,0.716,115,0.629,116,0.629,119,1.156,124,1.389,128,1.088,135,1.52,142,0.716,143,0.716,147,1.071,162,1.896,164,1.801,185,1.712,195,1.674,217,0.716,220,1.316,225,0.716,229,1.246,230,1.088,231,1.499,232,1.712,233,1.416,236,2.249,237,2.249,238,1.712,240,1.913,241,1.674,242,1.913,243,1.246,244,1.913,245,2.252,246,1.581,247,1.48,248,1.416,252,2.057,253,1.48,254,1.48,256,0.932,257,0.932,258,0.932,259,0.932,260,1.071,261,0.932,262,0.932,263,0.716,264,0.932,268,0.932,269,0.932,270,0.815,271,0.932,272,0.815,278,1.969,283,1.239,284,1.416,285,1.239,286,1.416,288,0.932,290,0.932,292,0.932,293,0.932,294,0.932,316,1.893,322,2.29,331,1.246,339,1.246,340,1.246,341,1.246,344,1.246,346,1.48,420,1.48,526,3.685,527,3.685,528,3.768,529,3.373,530,1.835,531,1.835,532,1.835,533,1.835,534,2.789,535,1.48,536,1.835,537,1.48,538,1.835,539,1.835,540,1.835,541,1.835,542,1.835,543,1.835,544,1.835,545,2.249,546,1.48,547,1.835,548,1.835,549,1.835,550,1.48,551,1.835,552,1.835,553,1.835,554,1.835,555,1.835,556,1.835,557,1.835,558,1.835,559,1.835,560,1.835,561,1.835,562,1.835,563,1.835,564,1.835,565,1.835,566,1.835,567,1.835,568,1.835,569,1.835,570,1.835,571,1.835,572,1.835,573,1.835,574,1.835,575,1.835,576,1.835,577,1.835,578,1.835,579,1.835]],["title/components/VerifyCodeComponent.html",[0,0.196,71,0.385]],["body/components/VerifyCodeComponent.html",[0,0.233,1,0.243,2,0.447,3,0.29,4,0.243,5,0.341,6,0.341,7,0.341,8,0.243,10,0.341,11,0.977,12,0.977,14,0.525,15,0.719,16,0.525,18,0.525,20,0.525,22,0.341,23,0.609,25,0.777,26,0.052,28,0.835,29,0.835,32,1.209,34,0.813,35,0.243,36,0.594,37,0.29,38,0.29,39,0.341,40,0.525,41,0.525,42,0.341,43,0.719,44,0.341,45,0.457,46,0.341,47,0.243,48,0.525,49,0.341,50,0.513,51,0.341,52,0.513,53,0.777,54,0.341,55,0.243,56,0.341,57,0.525,58,0.243,59,0.341,60,0.243,61,0.341,62,0.243,63,0.341,64,0.243,65,0.341,66,0.513,67,0.341,68,0.341,69,0.243,70,0.341,71,0.513,72,0.905,73,0.728,74,0.341,75,0.341,76,0.024,77,0.024,98,1.49,101,1.447,104,0.803,111,0.677,115,0.594,116,0.594,119,1.254,124,1.43,128,1.427,135,1.43,142,0.677,143,0.677,162,1.854,164,0.771,195,1.995,217,0.677,220,1.271,225,0.677,230,1.042,231,1.447,232,1.653,233,0.88,234,1.559,238,1.653,240,1.857,241,1.626,242,1.857,243,1.177,244,1.857,245,2.207,246,1.541,248,1.356,252,2.006,256,0.88,257,0.88,258,0.88,259,0.88,261,0.88,262,0.88,263,0.677,264,0.88,265,1.012,266,1.901,267,2.154,268,0.88,269,0.88,270,0.771,271,0.88,272,0.771,275,1.012,277,1.012,281,1.559,282,1.399,283,1.854,284,1.857,285,1.626,286,1.857,287,1.399,288,0.88,290,0.88,291,1.559,292,1.356,293,0.88,294,0.88,535,1.399,537,1.399,545,2.154,546,1.399,550,1.399,580,3.792,581,3.792,582,1.399,583,2.671,584,2.671,585,3.257,586,3.257,587,3.257,588,3.659,589,1.734,590,1.734,591,1.734,592,1.734,593,1.734,594,1.734,595,1.734,596,1.734,597,1.734,598,1.734,599,2.671,600,1.734,601,1.734,602,1.734,603,1.734,604,1.734,605,3.257,606,1.734,607,1.734,608,1.734,609,1.734,610,3.257,611,1.734,612,1.734,613,1.734,614,1.734,615,1.734,616,1.734,617,1.734,618,1.734,619,1.734,620,2.671,621,2.671,622,1.734,623,1.734,624,1.734,625,1.734,626,1.734,627,1.734]],["title/coverage.html",[628,3.003]],["body/coverage.html",[0,0.389,1,0.451,8,0.451,9,2.594,25,0.632,26,0.051,47,0.451,50,0.451,52,0.451,55,0.451,58,0.451,60,0.451,62,0.451,64,0.451,66,0.451,69,0.451,71,0.451,76,0.038,77,0.038,78,2.594,79,2.594,80,2.594,97,1.877,98,1.102,100,2.594,135,1.102,172,2.594,216,2.594,217,1.255,218,2.594,227,2.594,228,2.594,229,2.81,263,1.255,308,2.594,313,2.594,372,2.594,402,2.594,521,2.594,522,2.594,526,2.594,527,2.594,580,2.594,581,2.594,582,2.594,628,2.594,629,3.216,630,3.216,631,3.216,632,5.543,633,4.14,634,3.338,635,4.833,636,2.594,637,5.207,638,2.594,639,2.594,640,2.594,641,4.577,642,3.216,643,3.216,644,4.14,645,2.594,646,2.594,647,3.216,648,3.216,649,3.216]],["title/dependencies.html",[650,1.56,651,2.655]],["body/dependencies.html",[26,0.051,35,0.532,36,1.3,76,0.042,77,0.042,86,2.214,142,1.48,143,1.48,651,3.058,652,3.792,653,5.482,654,3.792,655,4.933,656,4.588,657,3.792,658,3.058,659,3.792,660,3.058,661,3.792,662,3.792,663,3.792,664,3.792,665,3.792,666,3.792,667,3.792,668,3.792,669,3.792,670,3.792,671,3.792]],["title/index.html",[22,0.452,672,2.297,673,2.297]],["body/index.html",[0,0.334,4,0.473,26,0.039,45,0.473,73,0.564,76,0.039,77,0.039,135,1.155,193,2.718,230,1.315,392,3.439,650,2.288,658,3.439,660,2.718,674,3.37,675,4.265,676,3.37,677,4.679,678,4.679,679,2.718,680,3.37,681,5.073,682,5.262,683,3.37,684,3.37,685,3.37,686,3.37,687,3.37,688,3.37,689,3.37,690,3.37,691,3.37,692,3.37,693,4.679,694,4.679,695,3.37,696,4.917,697,3.37,698,3.37,699,3.37,700,3.37,701,4.265,702,4.265,703,4.917,704,3.37,705,4.265,706,4.265,707,3.37,708,5.182,709,3.37,710,3.37,711,3.37,712,3.37,713,3.37,714,3.37,715,3.37,716,3.37,717,4.679,718,3.37,719,3.37,720,3.37,721,3.37,722,2.288,723,3.37,724,3.37]],["title/modules.html",[725,3.003]],["body/modules.html",[26,0.046,76,0.046,77,0.046,725,3.527]],["title/overview.html",[722,2.528]],["body/overview.html",[2,0.724,26,0.045,76,0.045,77,0.045,97,2.523,722,2.935,726,4.323,727,4.323]],["title/properties.html",[23,0.751,650,1.56]],["body/properties.html",[23,0.989,26,0.048,76,0.045,77,0.045,679,3.496,728,4.336]],["title/miscellaneous/variables.html",[729,1.853,730,2.655]],["body/miscellaneous/variables.html",[22,0.736,25,0.895,26,0.051,28,1.164,29,1.164,76,0.042,77,0.042,246,1.461,336,2.657,634,3.02,636,3.956,638,3.956,639,3.02,640,3.671,645,3.02,646,3.671,729,3.02,730,3.02,731,3.744,732,3.744,733,4.553,734,4.553,735,3.744,736,3.744,737,3.744,738,3.744,739,3.744,740,3.744,741,3.744]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":728,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":637,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":644,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":647,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":643,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":641,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":642,"title":{},"body":{"coverage.html":{}}}],["0rem",{"_index":198,"title":{},"body":{"components/ButtonComponent.html":{}}}],["1",{"_index":727,"title":{},"body":{"overview.html":{}}}],["100",{"_index":201,"title":{},"body":{"components/ButtonComponent.html":{}}}],["12",{"_index":726,"title":{},"body":{"overview.html":{}}}],["17.18.10",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["17.3.11",{"_index":660,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1rem",{"_index":197,"title":{},"body":{"components/ButtonComponent.html":{}}}],["2.3.0",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":290,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["3.3.1",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["4461f2",{"_index":189,"title":{},"body":{"components/ButtonComponent.html":{}}}],["7.8.0",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":341,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["9]{6",{"_index":604,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["9]{8",{"_index":423,"title":{},"body":{"components/RegisterComponent.html":{}}}],["_authservice",{"_index":322,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["_ngxauthapiservice",{"_index":248,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["abstractcontrol",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["account",{"_index":475,"title":{},"body":{"components/RegisterComponent.html":{}}}],["actual_component",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["add",{"_index":193,"title":{},"body":{"components/ButtonComponent.html":{},"index.html":{}}}],["already",{"_index":474,"title":{},"body":{"components/RegisterComponent.html":{}}}],["angular",{"_index":677,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":86,"title":{},"body":{"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["api",{"_index":269,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":687,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arabic",{"_index":394,"title":{},"body":{"components/NavbarComponent.html":{}}}],["architecto",{"_index":95,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["artifacts",{"_index":697,"title":{},"body":{"index.html":{}}}],["aspernatur",{"_index":94,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["autem",{"_index":90,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["auth",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["authlayoutcomponent",{"_index":47,"title":{"components/AuthLayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["authresponse",{"_index":343,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["authservice",{"_index":98,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["authservice:authservice",{"_index":273,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["automatically",{"_index":688,"title":{},"body":{"index.html":{}}}],["background",{"_index":182,"title":{},"body":{"components/ButtonComponent.html":{}}}],["behaviorsubject",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["boolean",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["bootstrap",{"_index":646,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["browser",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":696,"title":{},"body":{"index.html":{}}}],["button",{"_index":173,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["button.component.html",{"_index":176,"title":{},"body":{"components/ButtonComponent.html":{}}}],["button.component.scss",{"_index":177,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttonclicked",{"_index":178,"title":{},"body":{"components/ButtonComponent.html":{}}}],["buttoncomponent",{"_index":50,"title":{"components/ButtonComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["buttonmodule",{"_index":174,"title":{},"body":{"components/ButtonComponent.html":{}}}],["capabilities",{"_index":715,"title":{},"body":{"index.html":{}}}],["change",{"_index":690,"title":{},"body":{"index.html":{}}}],["check",{"_index":720,"title":{},"body":{"index.html":{}}}],["checkboxmodule",{"_index":317,"title":{},"body":{"components/LoginComponent.html":{}}}],["choice",{"_index":711,"title":{},"body":{"index.html":{}}}],["class",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["cli",{"_index":678,"title":{},"body":{"index.html":{}}}],["code",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"index.html":{}}}],["code.component.html",{"_index":583,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.scss",{"_index":584,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts",{"_index":582,"title":{},"body":{"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:21",{"_index":589,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:24",{"_index":596,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:25",{"_index":594,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:26",{"_index":595,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:27",{"_index":597,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:28",{"_index":591,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:33",{"_index":593,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:52",{"_index":592,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code.component.ts:72",{"_index":590,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["code/verify",{"_index":581,"title":{},"body":{"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["color",{"_index":183,"title":{},"body":{"components/ButtonComponent.html":{}}}],["command",{"_index":392,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["commonmodule",{"_index":175,"title":{},"body":{"components/ButtonComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"overview.html":{}}}],["config",{"_index":636,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmpassword",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["const",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["constructor(_ngxauthapiservice",{"_index":243,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["constructor(messageservice",{"_index":380,"title":{},"body":{"components/NavbarComponent.html":{}}}],["constructor(platformid",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":272,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["constructor(router",{"_index":321,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["continue",{"_index":525,"title":{},"body":{"components/RegisterMethodsComponent.html":{}}}],["control",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["control.parent",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["control.value",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":628,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["dependencies",{"_index":651,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["destroy",{"_index":238,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["detail",{"_index":286,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["detail:'language",{"_index":400,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dev",{"_index":684,"title":{},"body":{"index.html":{}}}],["development",{"_index":680,"title":{},"body":{"index.html":{}}}],["didn’t",{"_index":620,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["directive",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["directives",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":695,"title":{},"body":{"index.html":{}}}],["directory",{"_index":700,"title":{},"body":{"index.html":{}}}],["disabled",{"_index":179,"title":{},"body":{"components/ButtonComponent.html":{}}}],["dist",{"_index":699,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["dynamic",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":709,"title":{},"body":{"index.html":{}}}],["element",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["elevate",{"_index":88,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["email",{"_index":102,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["email,\"newpassword",{"_index":548,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["email}).pipe",{"_index":613,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["end",{"_index":708,"title":{},"body":{"index.html":{}}}],["english",{"_index":387,"title":{},"body":{"components/NavbarComponent.html":{}}}],["err",{"_index":555,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["err.error.message",{"_index":292,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["error",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["error:(err",{"_index":291,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["errormessage",{"_index":266,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["errormessagecomponent",{"_index":52,"title":{"components/ErrorMessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["event",{"_index":210,"title":{},"body":{"components/ButtonComponent.html":{}}}],["exam",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["execute",{"_index":705,"title":{},"body":{"index.html":{}}}],["export",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["express",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":195,"title":{},"body":{"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["fff",{"_index":191,"title":{},"body":{"components/ButtonComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["files",{"_index":691,"title":{},"body":{"index.html":{}}}],["first",{"_index":713,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":417,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forgot",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["forgotpasswordcomponent",{"_index":55,"title":{"components/ForgotPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["forgotpasswordform",{"_index":239,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.get('email')?.dirty",{"_index":298,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.get('email')?.errors",{"_index":297,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.get('email')?.touched",{"_index":296,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.get(\\'email\\')?.dirty",{"_index":305,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.get(\\'email\\')?.errors",{"_index":304,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["forgotpasswordform.get(\\'email\\')?.touched",{"_index":303,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["formcontrol",{"_index":259,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["formcontrol(null",{"_index":275,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["formcontrol(null,[validators.required",{"_index":541,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formcontrol(null,[validators.required,validators.pattern(/^(?=.*[a",{"_index":539,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formgroup",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["formgroup?.get('password')?.value",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["formsmodule",{"_index":315,"title":{},"body":{"components/LoginComponent.html":{}}}],["further",{"_index":716,"title":{},"body":{"index.html":{}}}],["generate",{"_index":693,"title":{},"body":{"index.html":{}}}],["generated",{"_index":676,"title":{},"body":{"index.html":{}}}],["getemail",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{}}}],["getting",{"_index":672,"title":{"index.html":{}},"body":{}}],["getusertoken",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{}}}],["go",{"_index":719,"title":{},"body":{"index.html":{}}}],["help",{"_index":717,"title":{},"body":{"index.html":{}}}],["home",{"_index":309,"title":{},"body":{"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["home.component.html",{"_index":310,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":311,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":58,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["html",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["http://localhost:4200",{"_index":686,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["if(forgotpasswordform.get('email')?.errors",{"_index":295,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["if(forgotpasswordform.get('email')?.errors?.['email",{"_index":299,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["if(forgotpasswordform.get('email')?.errors?.['required",{"_index":300,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["if(forgotpasswordform.get(\\'email\\')?.errors",{"_index":302,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["if(forgotpasswordform.get(\\'email\\')?.errors?.[\\'email",{"_index":306,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["if(forgotpasswordform.get(\\'email\\')?.errors?.[\\'required",{"_index":307,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["if(localstorage.getitem('token",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(loginform.get('email')?.errors",{"_index":348,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('email')?.errors?.['email",{"_index":352,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('email')?.errors?.['required",{"_index":353,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('password')?.errors",{"_index":354,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('password')?.errors?.['pattern",{"_index":358,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('password')?.errors?.['required",{"_index":359,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'email\\')?.errors",{"_index":360,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'email\\')?.errors?.[\\'email",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'email\\')?.errors?.[\\'required",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'password\\')?.errors",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'password\\')?.errors?.[\\'pattern",{"_index":370,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'password\\')?.errors?.[\\'required",{"_index":371,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(registerform.get('confirmpassword')?.errors",{"_index":462,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('confirmpassword')?.errors?.['passwordmismatch",{"_index":466,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('confirmpassword')?.errors?.['required",{"_index":467,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('email')?.errors",{"_index":450,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('email')?.errors?.['email",{"_index":454,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('email')?.errors?.['required",{"_index":455,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('firstname')?.errors",{"_index":436,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('firstname')?.errors?.['maxlength",{"_index":441,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('firstname')?.errors?.['minlength",{"_index":440,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('firstname')?.errors?.['required",{"_index":442,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('lastname')?.errors",{"_index":443,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('lastname')?.errors?.['maxlength",{"_index":448,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('lastname')?.errors?.['minlength",{"_index":447,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('lastname')?.errors?.['required",{"_index":449,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('password')?.errors",{"_index":456,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('password')?.errors?.['pattern",{"_index":460,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('password')?.errors?.['required",{"_index":461,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('phone')?.errors",{"_index":468,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('phone')?.errors?.['pattern",{"_index":472,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('phone')?.errors?.['required",{"_index":473,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('username')?.errors",{"_index":429,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('username')?.errors?.['maxlength",{"_index":434,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('username')?.errors?.['required",{"_index":435,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get('username')?.errors?.['username']?.['minlength",{"_index":433,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'confirmpassword\\')?.errors",{"_index":509,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'confirmpassword\\')?.errors?.[\\'passwordmismatch",{"_index":513,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'confirmpassword\\')?.errors?.[\\'required",{"_index":514,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'email\\')?.errors",{"_index":497,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'email\\')?.errors?.[\\'email",{"_index":501,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'email\\')?.errors?.[\\'required",{"_index":502,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'firstname\\')?.errors",{"_index":483,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'firstname\\')?.errors?.[\\'maxlength",{"_index":488,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'firstname\\')?.errors?.[\\'minlength",{"_index":487,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'firstname\\')?.errors?.[\\'required",{"_index":489,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'lastname\\')?.errors",{"_index":490,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'lastname\\')?.errors?.[\\'maxlength",{"_index":495,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'lastname\\')?.errors?.[\\'minlength",{"_index":494,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'lastname\\')?.errors?.[\\'required",{"_index":496,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'password\\')?.errors",{"_index":503,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'password\\')?.errors?.[\\'pattern",{"_index":507,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'password\\')?.errors?.[\\'required",{"_index":508,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'phone\\')?.errors",{"_index":515,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'phone\\')?.errors?.[\\'pattern",{"_index":519,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'phone\\')?.errors?.[\\'required",{"_index":520,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'username\\')?.errors",{"_index":476,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'username\\')?.errors?.[\\'maxlength",{"_index":481,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'username\\')?.errors?.[\\'required",{"_index":482,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(registerform.get(\\'username\\')?.errors?.[\\'username\\']?.[\\'minlength",{"_index":480,"title":{},"body":{"components/RegisterComponent.html":{}}}],["if(rememberme",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(res.message",{"_index":282,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["if(res.status",{"_index":607,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["if(resetpasswordform.get('password')?.errors",{"_index":556,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get('password')?.errors?.['pattern",{"_index":560,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get('password')?.errors?.['required",{"_index":561,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get('repassword')?.errors",{"_index":562,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get('repassword')?.errors?.['passwordmismatch",{"_index":566,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get('repassword')?.errors?.['required",{"_index":567,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get(\\'password\\')?.errors",{"_index":568,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get(\\'password\\')?.errors?.[\\'pattern",{"_index":572,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get(\\'password\\')?.errors?.[\\'required",{"_index":573,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get(\\'repassword\\')?.errors",{"_index":574,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get(\\'repassword\\')?.errors?.[\\'passwordmismatch",{"_index":578,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get(\\'repassword\\')?.errors?.[\\'required",{"_index":579,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(sessionstorage.getitem('token",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(this.selectedlanguage",{"_index":397,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(verifyform.get('resetcode')?.errors",{"_index":614,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["if(verifyform.get('resetcode')?.errors?.['pattern",{"_index":618,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["if(verifyform.get('resetcode')?.errors?.['required",{"_index":619,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["if(verifyform.get(\\'resetcode\\')?.errors",{"_index":622,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["if(verifyform.get(\\'resetcode\\')?.errors?.[\\'pattern",{"_index":626,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["if(verifyform.get(\\'resetcode\\')?.errors?.[\\'required",{"_index":627,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["implements",{"_index":230,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"index.html":{}}}],["import",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["inject",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(platform_id",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":97,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["input",{"_index":211,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{}}}],["input.required",{"_index":214,"title":{},"body":{"components/ButtonComponent.html":{}}}],["inputs",{"_index":181,"title":{},"body":{"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{}}}],["inputsignal",{"_index":203,"title":{},"body":{"components/ButtonComponent.html":{}}}],["inputtextmodule",{"_index":234,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["isplatformbrowser",{"_index":103,"title":{},"body":{"injectables/AuthService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["items",{"_index":377,"title":{},"body":{"components/NavbarComponent.html":{}}}],["karma",{"_index":707,"title":{},"body":{"index.html":{}}}],["label",{"_index":184,"title":{},"body":{"components/ButtonComponent.html":{},"components/NavbarComponent.html":{}}}],["lastname",{"_index":419,"title":{},"body":{"components/RegisterComponent.html":{}}}],["layout",{"_index":81,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["layout'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["layout.component.html",{"_index":83,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["layout.component.scss",{"_index":84,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["layout.component.ts",{"_index":80,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["layout/auth",{"_index":79,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["legend",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["loading",{"_index":185,"title":{},"body":{"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["localstorage.getitem('token",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.removeitem('token",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('token",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":314,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["login'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["login.component.html",{"_index":318,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":319,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":60,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":320,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.dirty",{"_index":351,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.errors",{"_index":350,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.touched",{"_index":349,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.dirty",{"_index":357,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.errors",{"_index":356,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.touched",{"_index":355,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.dirty",{"_index":363,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.errors",{"_index":362,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.touched",{"_index":361,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.dirty",{"_index":369,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.errors",{"_index":368,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.touched",{"_index":367,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{}}}],["match",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["menuitem",{"_index":385,"title":{},"body":{"components/NavbarComponent.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorMessageComponent.html":{}}}],["message'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["message.component",{"_index":257,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["message.component.html",{"_index":221,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["message.component.scss",{"_index":222,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["message.component.ts",{"_index":218,"title":{},"body":{"components/ErrorMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:13",{"_index":223,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["message/error",{"_index":217,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["messageservice",{"_index":246,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["messageservice:messageservice",{"_index":537,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["messagesmodule",{"_index":219,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["messagesmodule,toastmodule",{"_index":226,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["methods",{"_index":104,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["methods'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["methods.component",{"_index":264,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["methods.component.html",{"_index":523,"title":{},"body":{"components/RegisterMethodsComponent.html":{}}}],["methods.component.scss",{"_index":524,"title":{},"body":{"components/RegisterMethodsComponent.html":{}}}],["methods.component.ts",{"_index":522,"title":{},"body":{"components/RegisterMethodsComponent.html":{},"coverage.html":{}}}],["methods/register",{"_index":263,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["miscellaneous",{"_index":729,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":725,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":718,"title":{},"body":{"index.html":{}}}],["mouseevent",{"_index":208,"title":{},"body":{"components/ButtonComponent.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"index.html":{}}}],["natus",{"_index":96,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["navbar",{"_index":373,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["navbar.component.html",{"_index":375,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":376,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":62,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["navigate",{"_index":685,"title":{},"body":{"index.html":{}}}],["need",{"_index":712,"title":{},"body":{"index.html":{}}}],["new",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":551,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["next:(res",{"_index":281,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["ng",{"_index":682,"title":{},"body":{"index.html":{}}}],["ngondestroy",{"_index":240,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["ngoninit",{"_index":241,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["ngoptimizedimage",{"_index":82,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["ngx",{"_index":268,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["ngxauthapiservice",{"_index":244,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["ngxauthapiservice,authresponse,errormessage",{"_index":332,"title":{},"body":{"components/LoginComponent.html":{}}}],["null",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"components/ErrorMessageComponent.html":{}}}],["object",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["onbuttonclicked",{"_index":180,"title":{},"body":{"components/ButtonComponent.html":{}}}],["onbuttonclicked(event",{"_index":207,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ondestroy",{"_index":232,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["oninit",{"_index":231,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["oninit,ondestroy",{"_index":413,"title":{},"body":{"components/RegisterComponent.html":{}}}],["online",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["onlineexam",{"_index":674,"title":{},"body":{"index.html":{}}}],["optional",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["out",{"_index":721,"title":{},"body":{"index.html":{}}}],["output",{"_index":212,"title":{},"body":{"components/ButtonComponent.html":{}}}],["outputs",{"_index":188,"title":{},"body":{"components/ButtonComponent.html":{}}}],["overview",{"_index":722,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":650,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":186,"title":{},"body":{"components/ButtonComponent.html":{}}}],["page",{"_index":724,"title":{},"body":{"index.html":{}}}],["pages/navbar/navbar.component",{"_index":85,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["parameters",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["password",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["password'},{'name",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["password.component.html",{"_index":236,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":237,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":229,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:21",{"_index":247,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":533,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":254,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:26",{"_index":253,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts:27",{"_index":255,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:28",{"_index":531,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:29",{"_index":250,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":251,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":532,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:55",{"_index":249,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["password.component.ts:61",{"_index":530,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/forgot",{"_index":228,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":527,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordmatchvalidator",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordmismatch",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordmodule",{"_index":316,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["passwords",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":421,"title":{},"body":{"components/RegisterComponent.html":{}}}],["platform",{"_index":710,"title":{},"body":{"index.html":{}}}],["platform_id",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["platformid",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["primeflex",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":270,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["primeng/button",{"_index":213,"title":{},"body":{"components/ButtonComponent.html":{}}}],["primeng/checkbox",{"_index":333,"title":{},"body":{"components/LoginComponent.html":{}}}],["primeng/inputtext",{"_index":265,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["primeng/messages",{"_index":224,"title":{},"body":{"components/ErrorMessageComponent.html":{}}}],["primeng/password",{"_index":331,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["primeng/splitbutton",{"_index":389,"title":{},"body":{"components/NavbarComponent.html":{}}}],["primeng/toast",{"_index":225,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["private",{"_index":101,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["project",{"_index":675,"title":{},"body":{"index.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"properties.html":{}}}],["provideanimationsasync",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["providehttpclient(withfetch",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":336,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quaerat",{"_index":93,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["qui",{"_index":92,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["quidem",{"_index":89,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["reactiveformsmodule",{"_index":233,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["reactiveformsmodule,buttoncomponent,passwordmodule",{"_index":536,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["reactiveformsmodule,formsmodule",{"_index":334,"title":{},"body":{"components/LoginComponent.html":{}}}],["reactiveformsmodule,inputtextmodule",{"_index":600,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["reactiveformsmodule,validators",{"_index":598,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["receive",{"_index":621,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["recover",{"_index":301,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["recoverpasswordresponse",{"_index":267,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["reference",{"_index":723,"title":{},"body":{"index.html":{}}}],["register",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["register'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["register.component.html",{"_index":403,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":404,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":64,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["registerform",{"_index":405,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('confirmpassword')?.dirty",{"_index":465,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('confirmpassword')?.errors",{"_index":464,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('confirmpassword')?.touched",{"_index":463,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email')?.dirty",{"_index":453,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email')?.errors",{"_index":452,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('email')?.touched",{"_index":451,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('firstname')?.dirty",{"_index":439,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('firstname')?.errors",{"_index":438,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('firstname')?.touched",{"_index":437,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('lastname')?.dirty",{"_index":446,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('lastname')?.errors",{"_index":445,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('lastname')?.touched",{"_index":444,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password')?.dirty",{"_index":459,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password')?.errors",{"_index":458,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('password')?.touched",{"_index":457,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone')?.dirty",{"_index":471,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone')?.errors",{"_index":470,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('phone')?.touched",{"_index":469,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('username')?.dirty",{"_index":432,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('username')?.errors",{"_index":431,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get('username')?.touched",{"_index":430,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'confirmpassword\\')?.dirty",{"_index":512,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'confirmpassword\\')?.errors",{"_index":511,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'confirmpassword\\')?.touched",{"_index":510,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email\\')?.dirty",{"_index":500,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email\\')?.errors",{"_index":499,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'email\\')?.touched",{"_index":498,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'firstname\\')?.dirty",{"_index":486,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'firstname\\')?.errors",{"_index":485,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'firstname\\')?.touched",{"_index":484,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'lastname\\')?.dirty",{"_index":493,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'lastname\\')?.errors",{"_index":492,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'lastname\\')?.touched",{"_index":491,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password\\')?.dirty",{"_index":506,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password\\')?.errors",{"_index":505,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'password\\')?.touched",{"_index":504,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone\\')?.dirty",{"_index":518,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone\\')?.errors",{"_index":517,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'phone\\')?.touched",{"_index":516,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'username\\')?.dirty",{"_index":479,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'username\\')?.errors",{"_index":478,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registerform.get(\\'username\\')?.touched",{"_index":477,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registermethodscomponent",{"_index":66,"title":{"components/RegisterMethodsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["registermethodscomponent,routerlink,toastmodule,checkboxmodule",{"_index":335,"title":{},"body":{"components/LoginComponent.html":{}}}],["reload",{"_index":689,"title":{},"body":{"index.html":{}}}],["rememberme",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["repassword",{"_index":540,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["required",{"_index":204,"title":{},"body":{"components/ButtonComponent.html":{}}}],["res",{"_index":552,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["res.info",{"_index":287,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["res.message",{"_index":344,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["res.status",{"_index":608,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["res.token",{"_index":554,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resendcode",{"_index":588,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["resendloading",{"_index":585,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["reset",{"_index":528,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetcode",{"_index":602,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["resetpasswordcomponent",{"_index":69,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["resetpasswordform",{"_index":529,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get('password')?.dirty",{"_index":559,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get('password')?.errors",{"_index":558,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get('password')?.touched",{"_index":557,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get('repassword')?.dirty",{"_index":565,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get('repassword')?.errors",{"_index":564,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get('repassword')?.touched",{"_index":563,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get(\\'password\\')?.dirty",{"_index":571,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get(\\'password\\')?.errors",{"_index":570,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get(\\'password\\')?.touched",{"_index":569,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get(\\'repassword\\')?.dirty",{"_index":577,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get(\\'repassword\\')?.errors",{"_index":576,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordform.get(\\'repassword\\')?.touched",{"_index":575,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordresponse",{"_index":534,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["results",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["returns",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["root'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["router",{"_index":245,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["routerlink",{"_index":235,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{}}}],["run",{"_index":681,"title":{},"body":{"index.html":{}}}],["running",{"_index":701,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"dependencies.html":{}}}],["saveusertoken",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{}}}],["saveusertoken(rememberme",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["scaffolding",{"_index":692,"title":{},"body":{"index.html":{}}}],["selectedlanguage",{"_index":378,"title":{},"body":{"components/NavbarComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["serve",{"_index":683,"title":{},"body":{"index.html":{}}}],["server",{"_index":658,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["serverconfig",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["services/auth.service",{"_index":271,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["sessionstorage.getitem('token",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.removeitem('token",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('token",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["setemail",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["setemail(email",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["settimeout",{"_index":288,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["shared/components/ui/button/button.component",{"_index":258,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["shared/components/ui/error",{"_index":256,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["shared/components/ui/register",{"_index":262,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["sign",{"_index":347,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"index.html":{}}}],["splitbuttonmodule",{"_index":374,"title":{},"body":{"components/NavbarComponent.html":{}}}],["splitbuttonmodule,toastmodule",{"_index":390,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/.../app.config.server.ts",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/layout/auth",{"_index":78,"title":{},"body":{"components/AuthLayoutComponent.html":{},"coverage.html":{}}}],["src/core/pages/forgot",{"_index":227,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"coverage.html":{}}}],["src/core/pages/login/login.component.ts",{"_index":313,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/core/pages/login/login.component.ts:23",{"_index":323,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/login/login.component.ts:25",{"_index":329,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/login/login.component.ts:26",{"_index":327,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/login/login.component.ts:27",{"_index":330,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/login/login.component.ts:28",{"_index":328,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/login/login.component.ts:30",{"_index":325,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/login/login.component.ts:36",{"_index":326,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/login/login.component.ts:56",{"_index":324,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/core/pages/navbar/navbar.component.ts",{"_index":372,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/core/pages/navbar/navbar.component.ts:14",{"_index":381,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/core/pages/navbar/navbar.component.ts:17",{"_index":386,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/core/pages/navbar/navbar.component.ts:18",{"_index":388,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/core/pages/navbar/navbar.component.ts:19",{"_index":382,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/core/pages/navbar/navbar.component.ts:27",{"_index":384,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/core/pages/register/register.component.ts",{"_index":402,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/core/pages/register/register.component.ts:23",{"_index":406,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/core/pages/register/register.component.ts:25",{"_index":412,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/core/pages/register/register.component.ts:26",{"_index":410,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/core/pages/register/register.component.ts:27",{"_index":411,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/core/pages/register/register.component.ts:29",{"_index":408,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/core/pages/register/register.component.ts:45",{"_index":409,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/core/pages/register/register.component.ts:64",{"_index":407,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/core/pages/reset",{"_index":526,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/core/pages/verify",{"_index":580,"title":{},"body":{"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["src/core/services/auth.service.ts",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/core/services/auth.service.ts:12",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:13",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:15",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:18",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:22",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:32",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:45",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:53",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/core/services/auth.service.ts:9",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/feature/pages/home/home.component.ts",{"_index":308,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":645,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/shared/components/ui/button/button.component.ts",{"_index":172,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["src/shared/components/ui/button/button.component.ts:13",{"_index":194,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:14",{"_index":200,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:15",{"_index":199,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:16",{"_index":202,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:17",{"_index":190,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:18",{"_index":192,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:19",{"_index":196,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:20",{"_index":205,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:21",{"_index":206,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/button/button.component.ts:23",{"_index":209,"title":{},"body":{"components/ButtonComponent.html":{}}}],["src/shared/components/ui/error",{"_index":216,"title":{},"body":{"components/ErrorMessageComponent.html":{},"coverage.html":{}}}],["src/shared/components/ui/register",{"_index":521,"title":{},"body":{"components/RegisterMethodsComponent.html":{},"coverage.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["started",{"_index":673,"title":{"index.html":{}},"body":{}}],["statements",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":698,"title":{},"body":{"index.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/NavbarComponent.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["subject",{"_index":252,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["submit",{"_index":242,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["subscribe",{"_index":550,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["success",{"_index":283,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["summary",{"_index":285,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["switchmap",{"_index":535,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["switchmap(email",{"_index":546,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["table",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":648,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":261,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["takeuntil(this.destroy",{"_index":545,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["test",{"_index":704,"title":{},"body":{"index.html":{}}}],["testing",{"_index":714,"title":{},"body":{"index.html":{}}}],["tests",{"_index":703,"title":{},"body":{"index.html":{}}}],["this._authservice.getemail().pipe",{"_index":544,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._authservice.passwordmatchvalidator",{"_index":420,"title":{},"body":{"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this._authservice.saveusertoken(false",{"_index":553,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._authservice.saveusertoken(this.rememberme,res.token",{"_index":345,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._ngxauthapiservice.login(this.loginform.value).pipe(takeuntil(this.destroy$)).subscribe",{"_index":342,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._ngxauthapiservice.recoverpassword(this.forgotpasswordform.value).pipe(takeuntil(this.destroy$)).subscribe",{"_index":280,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this._ngxauthapiservice.recoverpassword({\"email",{"_index":612,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["this._ngxauthapiservice.register(this.registerform.value).pipe(takeuntil(this.destroy$)).subscribe",{"_index":426,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this._ngxauthapiservice.resetpassword({\"email",{"_index":547,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._ngxauthapiservice.verifycode(this.verifyform.value).subscribe",{"_index":606,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["this.authservice.getemail().pipe",{"_index":611,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["this.authservice.setemail(this.forgotpasswordform.value.email",{"_index":279,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.buttonclicked.emit(true",{"_index":215,"title":{},"body":{"components/ButtonComponent.html":{}}}],["this.destroy$.complete",{"_index":294,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["this.destroy$.next(true",{"_index":293,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["this.email.asobservable",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.email.next(email",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.forgotpasswordform",{"_index":274,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.isplatformbrowser",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.items",{"_index":391,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loading",{"_index":278,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.loginform",{"_index":337,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.messageservice.add({severity",{"_index":284,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["this.messageservice.add({severity:'success",{"_index":399,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.registerform",{"_index":414,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('confirmpassword')?.updatevalueandvalidity",{"_index":425,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.registerform.get('password')?.valuechanges.pipe(takeuntil(this.destroy$)).subscribe",{"_index":424,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.resendloading",{"_index":610,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["this.resetpasswordform",{"_index":538,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.get('password')?.valuechanges.pipe(takeuntil(this.destroy$)).subscribe",{"_index":542,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.get('repassword')?.updatevalueandvalidity",{"_index":543,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.resetpasswordform.value.password}).pipe",{"_index":549,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/home",{"_index":346,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/login",{"_index":427,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.router.navigate(['/reset",{"_index":609,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["this.router.navigate(['/verify",{"_index":289,"title":{},"body":{"components/ForgotPasswordComponent.html":{}}}],["this.selectedlanguage",{"_index":398,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.togglelanguage('arabic",{"_index":395,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.togglelanguage('english",{"_index":393,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.verifyform",{"_index":601,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["this.verifyloading",{"_index":605,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["toastmodule",{"_index":220,"title":{},"body":{"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["togglelanguage",{"_index":379,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglelanguage(label",{"_index":383,"title":{},"body":{"components/NavbarComponent.html":{}}}],["togglelanguage(label:string",{"_index":396,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["tslib",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":702,"title":{},"body":{"index.html":{}}}],["up",{"_index":428,"title":{},"body":{"components/RegisterComponent.html":{}}}],["updated",{"_index":401,"title":{},"body":{"components/NavbarComponent.html":{}}}],["use",{"_index":694,"title":{},"body":{"index.html":{}}}],["username",{"_index":415,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validationerrors",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["validatorfn",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"components/RegisterComponent.html":{}}}],["validators",{"_index":260,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["validators.email",{"_index":276,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(\"^01[0,1,2,5][0",{"_index":422,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.pattern(/^(?=.*[a",{"_index":338,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.pattern(/^[0",{"_index":603,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["validators.required",{"_index":277,"title":{},"body":{"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["validators.required,validators.minlength(4),validators.maxlength(20",{"_index":418,"title":{},"body":{"components/RegisterComponent.html":{}}}],["validators.required,validators.minlength(4),validators.maxlength(25",{"_index":416,"title":{},"body":{"components/RegisterComponent.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["variable",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":730,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["verifycodecomponent",{"_index":71,"title":{"components/VerifyCodeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthLayoutComponent.html":{},"components/ButtonComponent.html":{},"components/ErrorMessageComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/RegisterMethodsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{},"coverage.html":{}}}],["verifycoderesponse",{"_index":599,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyform",{"_index":586,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyform.get('resetcode')?.dirty",{"_index":617,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyform.get('resetcode')?.errors",{"_index":616,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyform.get('resetcode')?.touched",{"_index":615,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyform.get(\\'resetcode\\')?.dirty",{"_index":625,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyform.get(\\'resetcode\\')?.errors",{"_index":624,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyform.get(\\'resetcode\\')?.touched",{"_index":623,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["verifyloading",{"_index":587,"title":{},"body":{"components/VerifyCodeComponent.html":{}}}],["version",{"_index":679,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":706,"title":{},"body":{"index.html":{}}}],["void",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"components/ButtonComponent.html":{},"components/ForgotPasswordComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{},"components/VerifyCodeComponent.html":{}}}],["voluptatibus",{"_index":91,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["welcome",{"_index":87,"title":{},"body":{"components/AuthLayoutComponent.html":{}}}],["width",{"_index":187,"title":{},"body":{"components/ButtonComponent.html":{}}}],["works",{"_index":312,"title":{},"body":{"components/HomeComponent.html":{}}}],["z])(?=.*[@$!%*#?&^_",{"_index":340,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["za",{"_index":339,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["zone.js",{"_index":670,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'online-exam'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'online-exam';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthLayoutComponent.html":{"url":"components/AuthLayoutComponent.html","title":"component - AuthLayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthLayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/layout/auth-layout/auth-layout.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth-layout\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                NavbarComponent\n                            RouterOutlet\n                            NgOptimizedImage\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./auth-layout.component.html\n            \n\n\n\n            \n                styleUrl\n                ./auth-layout.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NavbarComponent } from \"../../pages/navbar/navbar.component\";\nimport { RouterOutlet } from '@angular/router';\nimport { NgOptimizedImage } from '@angular/common';\n@Component({\n  selector: 'app-auth-layout',\n  standalone: true,\n  imports: [NavbarComponent, RouterOutlet ,NgOptimizedImage],\n  templateUrl: './auth-layout.component.html',\n  styleUrl: './auth-layout.component.scss'\n})\nexport class AuthLayoutComponent {\n\n}\n\n    \n\n    \n        \n    \n      \n        Welcome to \n          Elevate\n          Quidem autem voluptatibus qui quaerat aspernatur architecto natus\n         \n          \n         \n      \n    \n    \n    \n    \n      \n    \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Welcome to           Elevate          Quidem autem voluptatibus qui quaerat aspernatur architecto natus                                                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthLayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                email\n                            \n                            \n                                isPlatformBrowser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getEmail\n                            \n                            \n                                getUserToken\n                            \n                            \n                                logout\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                saveUserToken\n                            \n                            \n                                setEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/core/services/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEmail\n                        \n                    \n                \n            \n            \n                \ngetEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/auth.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserToken\n                        \n                    \n                \n            \n            \n                \ngetUserToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/auth.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveUserToken\n                        \n                    \n                \n            \n            \n                \nsaveUserToken(rememberMe: boolean, token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rememberMe\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setEmail\n                        \n                    \n                \n            \n            \n                \nsetEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/services/auth.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/core/services/auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlatformBrowser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/core/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor( @Inject(PLATFORM_ID) private platformId: Object) {}\n  isPlatformBrowser = () => isPlatformBrowser(this.platformId);\n  private email: BehaviorSubject = new BehaviorSubject('');\n\n  getEmail(): Observable {\n    return this.email.asObservable();\n  }\n  setEmail(email: string): void {\n    this.email.next(email);\n  }\n\n  saveUserToken(rememberMe: boolean, token: string): void {\n    if (this.isPlatformBrowser()) {\n      if(rememberMe) {\n        localStorage.setItem('token', token);\n      }else{\n        sessionStorage.setItem('token', token);\n      }\n    }\n  }\n\n  getUserToken(): string | null {\n    if (this.isPlatformBrowser()) {\n      if(localStorage.getItem('token')){\n        return localStorage.getItem('token');\n      }else{\n        if(sessionStorage.getItem('token')){\n          return sessionStorage.getItem('token');\n        } \n      }\n    }\n    return null;\n  }\n\n  logout(): void {\n    if (this.isPlatformBrowser()) {\n      localStorage.removeItem('token');\n      sessionStorage.removeItem('token');\n\n    }\n  }\n\n  passwordMatchValidator(): ValidatorFn {\n    return (control: AbstractControl) : ValidationErrors | null => {\n      const formGroup = control.parent;\n      const password = formGroup?.get('password')?.value;\n      const confirmPassword = control.value;\n      return password === confirmPassword ? null : {passwordMismatch: {message: 'Passwords do not match'}};\n    }\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/components/ui/button/button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ButtonModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./button.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onButtonClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                background\n                            \n                            \n                                color\n                            \n                            \n                                label\n                            \n                            \n                                loading\n                            \n                            \n                                padding\n                            \n                            \n                                type\n                            \n                            \n                                width\n                            \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        background\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#4461f2'\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '#fff'\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        padding\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1rem 0rem'\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'button'\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        width\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100%'\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                \n                    \n                        Required :  true\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/button/button.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onButtonClicked\n                        \n                    \n                \n            \n            \n                \nonButtonClicked(event: MouseEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/shared/components/ui/button/button.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        MouseEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClicked\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/shared/components/ui/button/button.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InputSignal\n\n                    \n                \n                    \n                        \n                                Defined in src/shared/components/ui/button/button.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, input, Input, InputSignal, output } from '@angular/core';\nimport { ButtonModule } from 'primeng/button';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [ButtonModule, CommonModule],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss',\n})\nexport class ButtonComponent {\n  @Input() label : string = 'Add';\n  @Input() type : string = 'button';\n  @Input() padding : string = '1rem 0rem';\n  @Input() width : string = '100%';\n  @Input() background : string = '#4461f2';\n  @Input() color : string = '#fff';\n  @Input() loading : boolean = false;\n  disabled : InputSignal  = input.required();\n  buttonClicked = output();\n\n  onButtonClicked(event: MouseEvent): void {\n    this.buttonClicked.emit(true);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorMessageComponent.html":{"url":"components/ErrorMessageComponent.html","title":"component - ErrorMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/components/ui/error-message/error-message.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-message\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MessagesModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./error-message.component.html\n            \n\n\n\n            \n                styleUrl\n                ./error-message.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/shared/components/ui/error-message/error-message.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input} from '@angular/core';\nimport { MessagesModule } from 'primeng/messages';\nimport { ToastModule } from 'primeng/toast';\n\n@Component({\n  selector: 'app-error-message',\n  standalone: true,\n  imports: [MessagesModule,ToastModule],\n  templateUrl: './error-message.component.html',\n  styleUrl: './error-message.component.scss'\n})\nexport class ErrorMessageComponent {\n  @Input() message : string | null = null ;\n}\n\n    \n\n    \n        \n    \n        {{message}}\n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{message}}    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgotPasswordComponent.html":{"url":"components/ForgotPasswordComponent.html","title":"component - ForgotPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgotPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/pages/forgot-password/forgot-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forgot-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                ErrorMessageComponent\n                                ButtonComponent\n                                RegisterMethodsComponent\n                            InputTextModule\n                            RouterLink\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forgot-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forgot-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                forgotPasswordForm\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxAuthApiService: NgxAuthApiService, router: Router, messageService: MessageService, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/pages/forgot-password/forgot-password.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxAuthApiService\n                                                  \n                                                        \n                                                                    NgxAuthApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/forgot-password/forgot-password.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/forgot-password/forgot-password.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/forgot-password/forgot-password.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/forgot-password/forgot-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/forgot-password/forgot-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/forgot-password/forgot-password.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ErrorMessageComponent } from \"../../../shared/components/ui/error-message/error-message.component\";\nimport { ButtonComponent } from \"../../../shared/components/ui/button/button.component\";\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Subject, takeUntil } from 'rxjs';\nimport { RegisterMethodsComponent } from \"../../../shared/components/ui/register-methods/register-methods.component\";\nimport { InputTextModule } from 'primeng/inputtext';\nimport { Router, RouterLink } from '@angular/router';\nimport { NgxAuthApiService, ErrorMessage, RecoverPasswordResponse } from 'ngx-auth-api';\nimport { MessageService } from 'primeng/api';\nimport { ToastModule } from 'primeng/toast';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  standalone: true,\n  imports: [ReactiveFormsModule, ErrorMessageComponent, ButtonComponent, RegisterMethodsComponent, InputTextModule ,RouterLink, ToastModule],\n  templateUrl: './forgot-password.component.html',\n  styleUrl: './forgot-password.component.scss'\n})\nexport class ForgotPasswordComponent implements OnInit, OnDestroy {\n\n  constructor(private _ngxAuthApiService: NgxAuthApiService, private router: Router, private messageService: MessageService, private authService:AuthService){}\n\n  forgotPasswordForm : FormGroup = new FormGroup({});\n  destroy$: Subject = new Subject();\n  loading: boolean = false;\n\n  ngOnInit(): void {\n      this.forgotPasswordForm = new FormGroup({\n        email: new FormControl(null , [Validators.email , Validators.required]),\n      });\n  }\n\n  submit(){\n    this.loading = true;\n   this.authService.setEmail(this.forgotPasswordForm.value.email);\n   this._ngxAuthApiService.recoverPassword(this.forgotPasswordForm.value).pipe(takeUntil(this.destroy$)).subscribe({\n     next:(res: RecoverPasswordResponse) => {\n        if(res.message === 'success'){\n          this.loading = false;\n          this.messageService.add({severity: 'success', summary: 'Success', detail: res.info});\n          setTimeout(() => {\n            this.router.navigate(['/verify-code']);\n          }, 2000);\n        }\n      },\n      error:(err: ErrorMessage) => {\n       this.loading = false;\n       this.messageService.add({severity: 'error', summary: 'Error', detail: err.error.message});\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n  }\n\n}\n\n    \n\n    \n        \n    Forgot your password?\n    \n    \n        \n        \n          @if(forgotPasswordForm.get('email')?.errors && forgotPasswordForm.get('email')?.touched || forgotPasswordForm.get('email')?.errors && forgotPasswordForm.get('email')?.dirty){\n            @if(forgotPasswordForm.get('email')?.errors?.['email']){\n              \n            }@else if(forgotPasswordForm.get('email')?.errors?.['required']){\n              \n            }\n          }\n          \n            Recover Password ?\n          \n          \n            \n          \n      \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Forgot your password?                                  @if(forgotPasswordForm.get(\\'email\\')?.errors && forgotPasswordForm.get(\\'email\\')?.touched || forgotPasswordForm.get(\\'email\\')?.errors && forgotPasswordForm.get(\\'email\\')?.dirty){            @if(forgotPasswordForm.get(\\'email\\')?.errors?.[\\'email\\']){                          }@else if(forgotPasswordForm.get(\\'email\\')?.errors?.[\\'required\\']){                          }          }                      Recover Password ?                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgotPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/feature/pages/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        home works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/pages/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            FormsModule\n                            InputTextModule\n                            PasswordModule\n                                ButtonComponent\n                                ErrorMessageComponent\n                                RegisterMethodsComponent\n                            RouterLink\n                            ToastModule\n                            CheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                loading\n                            \n                            \n                                loginForm\n                            \n                            \n                                rememberMe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _ngxAuthApiService: NgxAuthApiService, messageService: MessageService, _authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/pages/login/login.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngxAuthApiService\n                                                  \n                                                        \n                                                                    NgxAuthApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/login/login.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/login/login.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/login/login.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rememberMe\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { FormControl, FormGroup, Validators, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { NgxAuthApiService,AuthResponse,ErrorMessage } from 'ngx-auth-api';\nimport { ButtonComponent } from \"../../../shared/components/ui/button/button.component\";\nimport { Subject, takeUntil } from 'rxjs';\nimport { ErrorMessageComponent } from \"../../../shared/components/ui/error-message/error-message.component\";\nimport { RegisterMethodsComponent } from \"../../../shared/components/ui/register-methods/register-methods.component\";\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { AuthService } from '../../services/auth.service';\nimport { CheckboxModule } from 'primeng/checkbox';\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [ReactiveFormsModule,FormsModule, InputTextModule, PasswordModule, ButtonComponent, ErrorMessageComponent, RegisterMethodsComponent,RouterLink,ToastModule,CheckboxModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n  providers: []\n})\nexport class LoginComponent implements OnInit , OnDestroy{\n  constructor(private router: Router , private _ngxAuthApiService: NgxAuthApiService, private messageService: MessageService, private _authService: AuthService) {}\n  loginForm: FormGroup= new FormGroup({});\n  destroy$: Subject = new Subject();\n  rememberMe: boolean = false;\n  loading: boolean = false;\n\n  ngOnInit() {\n      this.loginForm = new FormGroup({\n          email: new FormControl(null , [Validators.email , Validators.required]) ,\n          password: new FormControl(null , [Validators.required , Validators.pattern(/^(?=.*[A-Za-z])(?=.*[@$!%*#?&^_-]).{8,}/)])\n      });\n  }\n  submit() {\n    this.loading = true;\n    this._ngxAuthApiService.login(this.loginForm.value).pipe(takeUntil(this.destroy$)).subscribe({\n      next:(res: AuthResponse) =>{ \n        if (res.message === 'success') {\n          this.loading = false;\n          this.messageService.add({severity: 'success', summary: 'Success', detail: res.message});\n          setTimeout(() => {\n            this._authService.saveUserToken(this.rememberMe,res.token);\n            this.router.navigate(['/home']);\n          },2000);\n        }\n      },\n      error:(err: ErrorMessage) => {\n        this.loading = false;\n        this.messageService.add({severity: 'error', summary: 'Error', detail: err.error.message});\n      }\n    })\n  }\n\n  ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n  Sign in\n  \n  \n    \n      \n      @if(loginForm.get('email')?.errors && loginForm.get('email')?.touched || loginForm.get('email')?.errors && loginForm.get('email')?.dirty){\n        @if(loginForm.get('email')?.errors?.['email']){\n          \n        }@else if(loginForm.get('email')?.errors?.['required']){\n          \n        }\n      }\n      \n      @if(loginForm.get('password')?.errors && loginForm.get('password')?.touched || loginForm.get('password')?.errors && loginForm.get('password')?.dirty){  \n        @if(loginForm.get('password')?.errors?.['pattern']){\n          \n        }@else if(loginForm.get('password')?.errors?.['required']){\n          \n        }\n      }\n      \n          \n        Recover Password ?\n      \n      \n    \n  \n \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Sign in                    @if(loginForm.get(\\'email\\')?.errors && loginForm.get(\\'email\\')?.touched || loginForm.get(\\'email\\')?.errors && loginForm.get(\\'email\\')?.dirty){        @if(loginForm.get(\\'email\\')?.errors?.[\\'email\\']){                  }@else if(loginForm.get(\\'email\\')?.errors?.[\\'required\\']){                  }      }            @if(loginForm.get(\\'password\\')?.errors && loginForm.get(\\'password\\')?.touched || loginForm.get(\\'password\\')?.errors && loginForm.get(\\'password\\')?.dirty){          @if(loginForm.get(\\'password\\')?.errors?.[\\'pattern\\']){                  }@else if(loginForm.get(\\'password\\')?.errors?.[\\'required\\']){                  }      }                        Recover Password ?                   '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/pages/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            SplitButtonModule\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                selectedLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/core/pages/navbar/navbar.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/navbar/navbar.component.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLanguage\n                        \n                    \n                \n            \n            \n                \ntoggleLanguage(label: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/navbar/navbar.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                label\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/navbar/navbar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'English'\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SplitButtonModule } from 'primeng/splitbutton';\nimport { ToastModule } from 'primeng/toast'\nimport { MenuItem, MessageService  } from 'primeng/api';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [SplitButtonModule,ToastModule],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.scss',\n  providers: [MessageService]\n})\nexport class NavbarComponent implements OnInit {\nconstructor(private messageService: MessageService){}\n\nitems: MenuItem[] = [];\nselectedLanguage: string = 'English';\nngOnInit(): void {\n  this.items = [\n    { label: 'English', command: () => {this.toggleLanguage('English');} },\n    { label: 'Arabic', command: () => {this.toggleLanguage('Arabic');} },\n\n  ];\n}\n\ntoggleLanguage(label:string) {\n  if(this.selectedLanguage === label) return;\n  this.selectedLanguage = label;\n  this.messageService.add({severity:'success', summary: 'Success', detail:'Language Updated'});\n}\n}\n\n    \n\n    \n        \n    \n      \n        \n            \n            \n                 \n        \n      Sign in\n      Register\n    \n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                         Sign in      Register    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/pages/register/register.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            InputTextModule\n                            PasswordModule\n                                ButtonComponent\n                            RouterLink\n                                ErrorMessageComponent\n                                RegisterMethodsComponent\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                loading\n                            \n                            \n                                registerForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _ngxAuthApiService: NgxAuthApiService, messageService: MessageService, _authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/pages/register/register.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngxAuthApiService\n                                                  \n                                                        \n                                                                    NgxAuthApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/register/register.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/register/register.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/register/register.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/register/register.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/register/register.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/register/register.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit} from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\nimport { FormControl, FormGroup, Validators, ReactiveFormsModule, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { PasswordModule } from 'primeng/password';\nimport { ButtonComponent } from \"../../../shared/components/ui/button/button.component\";\nimport { NgxAuthApiService ,AuthResponse, ErrorMessage } from 'ngx-auth-api';\nimport { ErrorMessageComponent } from \"../../../shared/components/ui/error-message/error-message.component\";\nimport { Subject, takeUntil } from 'rxjs';\nimport { RegisterMethodsComponent } from \"../../../shared/components/ui/register-methods/register-methods.component\";\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [ReactiveFormsModule, InputTextModule, PasswordModule, ButtonComponent, RouterLink, ErrorMessageComponent, RegisterMethodsComponent, ToastModule],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n  providers: []\n})\nexport class RegisterComponent implements OnInit,OnDestroy{\n  constructor(private router: Router , private _ngxAuthApiService: NgxAuthApiService , private messageService: MessageService, private _authService: AuthService){}\n  registerForm: FormGroup= new FormGroup({});\n  destroy$: Subject = new Subject();\n  loading: boolean = false;\n\n  ngOnInit() {\n      this.registerForm = new FormGroup({\n          username: new FormControl(null , [Validators.required,Validators.minLength(4),Validators.maxLength(25)]) ,\n          firstName: new FormControl(null , [Validators.required,Validators.minLength(4),Validators.maxLength(20)]) ,\n          lastName: new FormControl(null , [Validators.required,Validators.minLength(4),Validators.maxLength(20)]) ,\n          email: new FormControl(null , [Validators.email , Validators.required]) ,\n          password: new FormControl(null , [Validators.required, Validators.pattern(/^(?=.*[A-Za-z])(?=.*[@$!%*#?&^_-]).{8,}/)]),\n          confirmPassword: new FormControl(null , [Validators.required ,this._authService.passwordMatchValidator()]),\n          phone: new FormControl(null , [Validators.required , Validators.pattern(\"^01[0,1,2,5][0-9]{8}$\")])\n        });\n\n        this.registerForm.get('password')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(() => {\n         return this.registerForm.get('confirmPassword')?.updateValueAndValidity();\n        });\n  }\n\n  submit() {\n    this.loading = true;\n    this._ngxAuthApiService.register(this.registerForm.value).pipe(takeUntil(this.destroy$)).subscribe({\n      next:(res: AuthResponse) => {\n        if (res.message === 'success') {\n        this.loading = false;\n        this.messageService.add({severity: 'success', summary: 'Success', detail: res.message});\n          setTimeout(() => {\n            this.router.navigate(['/login']);\n          },2000);\n        }\n      },\n      error:(err: ErrorMessage) => {\n        this.loading = false;\n        this.messageService.add({severity: 'error', summary: 'Error', detail: err.error.message});\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  } \n\n}\n\n    \n\n    \n        \n    Sign up\n    \n    \n        \n        \n        @if(registerForm.get('username')?.errors && registerForm.get('username')?.touched || registerForm.get('username')?.errors && registerForm.get('username')?.dirty){\n          @if(registerForm.get('username')?.errors?.['username']?.['minlength']){\n            \n          }@else if(registerForm.get('username')?.errors?.['maxlength']){\n            \n          }@else if(registerForm.get('username')?.errors?.['required']){\n            \n          }\n        } \n        \n        @if(registerForm.get('firstName')?.errors && registerForm.get('firstName')?.touched || registerForm.get('firstName')?.errors && registerForm.get('firstName')?.dirty){\n          @if(registerForm.get('firstName')?.errors?.['minlength']){\n            \n          }@else if(registerForm.get('firstName')?.errors?.['maxlength']){\n            \n          }@else if(registerForm.get('firstName')?.errors?.['required']){\n            \n          }\n        }         \n        \n        @if(registerForm.get('lastName')?.errors && registerForm.get('lastName')?.touched || registerForm.get('lastName')?.errors && registerForm.get('lastName')?.dirty){  \n          @if(registerForm.get('lastName')?.errors?.['minlength']){\n            \n          }@else if(registerForm.get('lastName')?.errors?.['maxlength']){\n            \n          }@else if(registerForm.get('lastName')?.errors?.['required']){\n            \n          }\n        }          \n        \n        @if(registerForm.get('email')?.errors && registerForm.get('email')?.touched || registerForm.get('email')?.errors && registerForm.get('email')?.dirty){\n          @if(registerForm.get('email')?.errors?.['email']){\n            \n          }@else if(registerForm.get('email')?.errors?.['required']){\n            \n          }\n        }        \n        \n        @if(registerForm.get('password')?.errors && registerForm.get('password')?.touched || registerForm.get('password')?.errors && registerForm.get('password')?.dirty){\n          @if(registerForm.get('password')?.errors?.['pattern']){\n            \n          }@else if(registerForm.get('password')?.errors?.['required']){\n            \n          }\n        }        \n        \n        @if(registerForm.get('confirmPassword')?.errors && registerForm.get('confirmPassword')?.touched || registerForm.get('confirmPassword')?.errors && registerForm.get('confirmPassword')?.dirty){\n          @if(registerForm.get('confirmPassword')?.errors?.['passwordMismatch']){\n            \n          }@else if(registerForm.get('confirmPassword')?.errors?.['required']){\n            \n          }\n        }        \n        \n        @if(registerForm.get('phone')?.errors && registerForm.get('phone')?.touched || registerForm.get('phone')?.errors && registerForm.get('phone')?.dirty){\n          @if(registerForm.get('phone')?.errors?.['pattern']){\n            \n          }@else if(registerForm.get('phone')?.errors?.['required']){\n            \n          }\n        }         \n        Already have an account? Login\n      \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Sign up                                @if(registerForm.get(\\'username\\')?.errors && registerForm.get(\\'username\\')?.touched || registerForm.get(\\'username\\')?.errors && registerForm.get(\\'username\\')?.dirty){          @if(registerForm.get(\\'username\\')?.errors?.[\\'username\\']?.[\\'minlength\\']){                      }@else if(registerForm.get(\\'username\\')?.errors?.[\\'maxlength\\']){                      }@else if(registerForm.get(\\'username\\')?.errors?.[\\'required\\']){                      }        }                 @if(registerForm.get(\\'firstName\\')?.errors && registerForm.get(\\'firstName\\')?.touched || registerForm.get(\\'firstName\\')?.errors && registerForm.get(\\'firstName\\')?.dirty){          @if(registerForm.get(\\'firstName\\')?.errors?.[\\'minlength\\']){                      }@else if(registerForm.get(\\'firstName\\')?.errors?.[\\'maxlength\\']){                      }@else if(registerForm.get(\\'firstName\\')?.errors?.[\\'required\\']){                      }        }                         @if(registerForm.get(\\'lastName\\')?.errors && registerForm.get(\\'lastName\\')?.touched || registerForm.get(\\'lastName\\')?.errors && registerForm.get(\\'lastName\\')?.dirty){            @if(registerForm.get(\\'lastName\\')?.errors?.[\\'minlength\\']){                      }@else if(registerForm.get(\\'lastName\\')?.errors?.[\\'maxlength\\']){                      }@else if(registerForm.get(\\'lastName\\')?.errors?.[\\'required\\']){                      }        }                          @if(registerForm.get(\\'email\\')?.errors && registerForm.get(\\'email\\')?.touched || registerForm.get(\\'email\\')?.errors && registerForm.get(\\'email\\')?.dirty){          @if(registerForm.get(\\'email\\')?.errors?.[\\'email\\']){                      }@else if(registerForm.get(\\'email\\')?.errors?.[\\'required\\']){                      }        }                        @if(registerForm.get(\\'password\\')?.errors && registerForm.get(\\'password\\')?.touched || registerForm.get(\\'password\\')?.errors && registerForm.get(\\'password\\')?.dirty){          @if(registerForm.get(\\'password\\')?.errors?.[\\'pattern\\']){                      }@else if(registerForm.get(\\'password\\')?.errors?.[\\'required\\']){                      }        }                        @if(registerForm.get(\\'confirmPassword\\')?.errors && registerForm.get(\\'confirmPassword\\')?.touched || registerForm.get(\\'confirmPassword\\')?.errors && registerForm.get(\\'confirmPassword\\')?.dirty){          @if(registerForm.get(\\'confirmPassword\\')?.errors?.[\\'passwordMismatch\\']){                      }@else if(registerForm.get(\\'confirmPassword\\')?.errors?.[\\'required\\']){                      }        }                        @if(registerForm.get(\\'phone\\')?.errors && registerForm.get(\\'phone\\')?.touched || registerForm.get(\\'phone\\')?.errors && registerForm.get(\\'phone\\')?.dirty){          @if(registerForm.get(\\'phone\\')?.errors?.[\\'pattern\\']){                      }@else if(registerForm.get(\\'phone\\')?.errors?.[\\'required\\']){                      }        }                 Already have an account? Login                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterMethodsComponent.html":{"url":"components/RegisterMethodsComponent.html","title":"component - RegisterMethodsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterMethodsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/shared/components/ui/register-methods/register-methods.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-methods\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./register-methods.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register-methods.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-register-methods',\n  standalone: true,\n  imports: [],\n  templateUrl: './register-methods.component.html',\n  styleUrl: './register-methods.component.scss'\n})\nexport class RegisterMethodsComponent {\n\n}\n\n    \n\n    \n        \n    \n      Or Continue with\n    \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Or Continue with                                                                                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterMethodsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/pages/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-set-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                ButtonComponent\n                            PasswordModule\n                                ErrorMessageComponent\n                                RegisterMethodsComponent\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                loading\n                            \n                            \n                                resetPasswordForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxAuthApiService: NgxAuthApiService, _authService: AuthService, messageService: MessageService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/core/pages/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxAuthApiService\n                                                  \n                                                        \n                                                                    NgxAuthApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/reset-password/reset-password.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/reset-password/reset-password.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/reset-password/reset-password.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/reset-password/reset-password.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/reset-password/reset-password.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ButtonComponent } from \"../../../shared/components/ui/button/button.component\";\nimport { ErrorMessageComponent } from \"../../../shared/components/ui/error-message/error-message.component\";\nimport { RegisterMethodsComponent } from \"../../../shared/components/ui/register-methods/register-methods.component\";\nimport { ToastModule } from 'primeng/toast';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PasswordModule } from 'primeng/password';\nimport { NgxAuthApiService, ResetPasswordResponse } from 'ngx-auth-api';\nimport { MessageService } from 'primeng/api';\nimport { Subject, switchMap, takeUntil } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-set-password',\n  standalone: true,\n  imports: [ReactiveFormsModule,ButtonComponent,PasswordModule, ErrorMessageComponent, RegisterMethodsComponent, ToastModule],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent implements OnInit, OnDestroy {\n\n  constructor(private _ngxAuthApiService: NgxAuthApiService, private _authService: AuthService, private messageService:MessageService, private router: Router){}\n  resetPasswordForm: FormGroup = new FormGroup({});\n  destroy$: Subject = new Subject();\n  loading: boolean = false;\n\n  ngOnInit(): void {\n    this.resetPasswordForm = new FormGroup({\n      password: new FormControl(null,[Validators.required,Validators.pattern(/^(?=.*[A-Za-z])(?=.*[@$!%*#?&^_-]).{8,}/)]),\n      rePassword: new FormControl(null,[Validators.required, this._authService.passwordMatchValidator()]),\n    });\n\n    this.resetPasswordForm.get('password')?.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(() => {\n      return this.resetPasswordForm.get('rePassword')?.updateValueAndValidity();\n    })\n  }\n  submit(){\n    this.loading = true;\n    this._authService.getEmail().pipe(\n      takeUntil(this.destroy$),\n      switchMap(email => this._ngxAuthApiService.resetPassword({\"email\": email,\"newPassword\": this.resetPasswordForm.value.password}).pipe(\n        takeUntil(this.destroy$),\n      ))\n    ).subscribe({\n      next: (res: ResetPasswordResponse)=> {\n        this.loading = false;\n        this.messageService.add({severity: 'success', summary: 'Success', detail: res.message});\n        this._authService.saveUserToken(false, res.token);\n        setTimeout(() => {\n          this.router.navigate(['/home']);\n        },2000);\n      },\n      error: err =>{\n        this.loading = false;\n        this.messageService.add({severity: 'error', summary: 'Error', detail: err.error.message});\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n    Set a Password\n    \n    \n        \n        \n        @if(resetPasswordForm.get('password')?.errors && resetPasswordForm.get('password')?.touched || resetPasswordForm.get('password')?.errors && resetPasswordForm.get('password')?.dirty){\n          @if(resetPasswordForm.get('password')?.errors?.['pattern']){\n            \n          }@else if(resetPasswordForm.get('password')?.errors?.['required']){\n            \n          }\n        } \n        \n        @if(resetPasswordForm.get('rePassword')?.errors && resetPasswordForm.get('rePassword')?.touched || resetPasswordForm.get('rePassword')?.errors && resetPasswordForm.get('rePassword')?.dirty){\n          @if(resetPasswordForm.get('rePassword')?.errors?.['passwordMismatch']){\n            \n          }@else if(resetPasswordForm.get('rePassword')?.errors?.['required']){\n            \n          }\n        } \n        \n      \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Set a Password                                @if(resetPasswordForm.get(\\'password\\')?.errors && resetPasswordForm.get(\\'password\\')?.touched || resetPasswordForm.get(\\'password\\')?.errors && resetPasswordForm.get(\\'password\\')?.dirty){          @if(resetPasswordForm.get(\\'password\\')?.errors?.[\\'pattern\\']){                      }@else if(resetPasswordForm.get(\\'password\\')?.errors?.[\\'required\\']){                      }        }                 @if(resetPasswordForm.get(\\'rePassword\\')?.errors && resetPasswordForm.get(\\'rePassword\\')?.touched || resetPasswordForm.get(\\'rePassword\\')?.errors && resetPasswordForm.get(\\'rePassword\\')?.dirty){          @if(resetPasswordForm.get(\\'rePassword\\')?.errors?.[\\'passwordMismatch\\']){                      }@else if(resetPasswordForm.get(\\'rePassword\\')?.errors?.[\\'required\\']){                      }        }                       '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VerifyCodeComponent.html":{"url":"components/VerifyCodeComponent.html","title":"component - VerifyCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VerifyCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/core/pages/verify-code/verify-code.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-verify-code\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            InputTextModule\n                                ButtonComponent\n                                RegisterMethodsComponent\n                                ErrorMessageComponent\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./verify-code.component.html\n            \n\n\n\n            \n                styleUrl\n                ./verify-code.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                destroy$\n                            \n                            \n                                resendLoading\n                            \n                            \n                                verifyForm\n                            \n                            \n                                verifyLoading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resendCode\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_ngxAuthApiService: NgxAuthApiService, messageService: MessageService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/core/pages/verify-code/verify-code.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _ngxAuthApiService\n                                                  \n                                                        \n                                                                    NgxAuthApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/verify-code/verify-code.component.ts:72\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/verify-code/verify-code.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendCode\n                        \n                    \n                \n            \n            \n                \nresendCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/verify-code/verify-code.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/pages/verify-code/verify-code.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/verify-code/verify-code.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resendLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/verify-code/verify-code.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/verify-code/verify-code.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verifyLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/core/pages/verify-code/verify-code.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule,Validators } from '@angular/forms';\nimport { ButtonComponent } from \"../../../shared/components/ui/button/button.component\";\nimport { RegisterMethodsComponent } from \"../../../shared/components/ui/register-methods/register-methods.component\";\nimport { ErrorMessageComponent } from \"../../../shared/components/ui/error-message/error-message.component\";\nimport { Subject, switchMap, takeUntil } from 'rxjs';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ErrorMessage, NgxAuthApiService, RecoverPasswordResponse, VerifyCodeResponse } from 'ngx-auth-api';\nimport { MessageService } from 'primeng/api';\nimport { Router } from '@angular/router';\nimport { ToastModule } from 'primeng/toast';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-verify-code',\n  standalone: true,\n  imports: [ReactiveFormsModule,InputTextModule , ButtonComponent, RegisterMethodsComponent, ErrorMessageComponent, ToastModule],\n  templateUrl: './verify-code.component.html',\n  styleUrl: './verify-code.component.scss'\n})\nexport class VerifyCodeComponent implements OnInit, OnDestroy {\n  constructor(private _ngxAuthApiService: NgxAuthApiService, private messageService:MessageService, private router: Router, private authService: AuthService){}\n\n  verifyForm: FormGroup = new FormGroup({});\n  destroy$: Subject = new Subject();\n  resendLoading: boolean = false\n  verifyLoading: boolean = false\n  ngOnInit(): void {\n    this.verifyForm = new FormGroup({\n      resetCode : new FormControl(null , [Validators.required, Validators.pattern(/^[0-9]{6}$/)]),\n    });\n  }\n  submit(){\n    this.verifyLoading = true;\n    this._ngxAuthApiService.verifyCode(this.verifyForm.value).subscribe({\n      next:(res: VerifyCodeResponse) => {\n        if(res.status === 'Success'){\n          this.verifyLoading = false;\n          this.messageService.add({severity: 'success', summary: 'Success', detail: res.status});\n          setTimeout(() => {\n            this.router.navigate(['/reset-password']);\n          },2000)\n        } \n      },\n      error:(err: ErrorMessage) => {\n        this.verifyLoading = false;\n        this.messageService.add({severity: 'error', summary: 'Error', detail: err.error.message});\n      }\n    });\n  }\n\n  resendCode(){\n    this.resendLoading = true;\n    this.authService.getEmail().pipe(\n    takeUntil(this.destroy$),\n    switchMap(email => this._ngxAuthApiService.recoverPassword({\"email\": email}).pipe(\n    takeUntil(this.destroy$)  \n    ))).subscribe({\n      next:(res: RecoverPasswordResponse) => {\n       if(res.message === 'success'){\n          this.resendLoading = false;\n          this.messageService.add({severity: 'success', summary: 'Success', detail: res.info});\n         }\n       },\n       error:(err: ErrorMessage) => {\n        this.resendLoading = false;\n        this.messageService.add({severity: 'error', summary: 'Error', detail: err.error.message});\n       }\n    });\n  }\n\n  ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n  }\n}\n\n    \n\n    \n        \n    Verify code\n    \n    \n      \n        \n        @if(verifyForm.get('resetCode')?.errors && verifyForm.get('resetCode')?.touched || verifyForm.get('resetCode')?.errors && verifyForm.get('resetCode')?.dirty){\n          @if(verifyForm.get('resetCode')?.errors?.['pattern']){\n            \n          }@else if(verifyForm.get('resetCode')?.errors?.['required']){\n            \n          }\n        }\n        Didn’t receive a code? \n          \n        \n        \n      \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Verify code                              @if(verifyForm.get(\\'resetCode\\')?.errors && verifyForm.get(\\'resetCode\\')?.touched || verifyForm.get(\\'resetCode\\')?.errors && verifyForm.get(\\'resetCode\\')?.dirty){          @if(verifyForm.get(\\'resetCode\\')?.errors?.[\\'pattern\\']){                      }@else if(verifyForm.get(\\'resetCode\\')?.errors?.[\\'required\\']){                      }        }        Didn’t receive a code?                                         '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthLayoutComponent', 'selector': 'app-auth-layout'},{'name': 'ButtonComponent', 'selector': 'app-button'},{'name': 'ErrorMessageComponent', 'selector': 'app-error-message'},{'name': 'ForgotPasswordComponent', 'selector': 'app-forgot-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'RegisterMethodsComponent', 'selector': 'app-register-methods'},{'name': 'ResetPasswordComponent', 'selector': 'app-set-password'},{'name': 'VerifyCodeComponent', 'selector': 'app-verify-code'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'VerifyCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/layout/auth-layout/auth-layout.component.ts\n            \n            component\n            AuthLayoutComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/pages/forgot-password/forgot-password.component.ts\n            \n            component\n            ForgotPasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/pages/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/core/pages/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/core/pages/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/pages/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/pages/verify-code/verify-code.component.ts\n            \n            component\n            VerifyCodeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/feature/pages/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/shared/components/ui/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/shared/components/ui/error-message/error-message.component.ts\n            \n            component\n            ErrorMessageComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/shared/components/ui/register-methods/register-methods.component.ts\n            \n            component\n            RegisterMethodsComponent\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/platform-server : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @angular/ssr : ^17.3.11\n        \n            express : ^4.18.2\n        \n            primeflex : ^3.3.1\n        \n            primeng : ^17.18.10\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nOnlineExam\nThis project was generated with Angular CLI version 17.3.11.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideHttpClient(withFetch()),\n    provideAnimationsAsync(),\n    MessageService\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
